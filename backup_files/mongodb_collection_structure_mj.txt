==========================================
MongoDB 컬렉션 구조 및 필드 정리
==========================================

📊 데이터베이스: hireme
📅 생성일: 2025-08-20
🔄 업데이트: 최신

==========================================
1. APPLICANTS 컬렉션 (지원자 정보)
==========================================

📋 컬렉션명: applicants
📝 설명: 지원자의 기본 정보를 저장하는 메인 컬렉션

🔑 주요 필드:
├── _id: ObjectId (기본 키)
├── name: String (지원자 이름)
├── email: String (이메일 주소) - 유니크 인덱스
├── phone: String (전화번호)
├── position: String (지원 직무)
├── experience: Number (경력 연차)
├── skills: Array<String> (기술 스택 목록)
├── created_at: Date (생성일시)
├── updated_at: Date (수정일시)

🔗 연결 필드:
├── resume_id: String (이력서 ID - resumes 컬렉션 참조)
├── cover_letter_id: String (자기소개서 ID - cover_letters 컬렉션 참조)
├── portfolio_id: String (포트폴리오 ID - portfolios 컬렉션 참조)

📊 인덱스:
├── email: 1 (유니크)
├── created_at: -1
└── position: 1

==========================================
2. RESUMES 컬렉션 (이력서 정보)
==========================================

📋 컬렉션명: resumes
📝 설명: OCR로 추출된 이력서 정보를 저장

🔑 주요 필드:
├── _id: ObjectId (기본 키)
├── applicant_id: String (지원자 ID - applicants 참조)
├── extracted_text: String (OCR로 추출된 텍스트)
├── summary: String (AI 요약)
├── keywords: Array<String> (키워드 목록)
├── document_type: String (문서 타입: "resume")
├── basic_info: Object (기본 정보)
│   ├── emails: Array<String> (이메일 목록)
│   ├── phones: Array<String> (전화번호 목록)
│   ├── names: Array<String> (이름 목록)
│   └── urls: Array<String> (URL 목록)
├── file_metadata: Object (파일 메타데이터)
│   ├── filename: String (파일명)
│   ├── size: Number (파일 크기)
│   ├── mime: String (MIME 타입)
│   ├── hash: String (파일 해시)
│   ├── created_at: Date (생성일시)
│   └── modified_at: Date (수정일시)
└── created_at: Date (생성일시)

📊 인덱스:
├── applicant_id: 1
├── created_at: -1
└── document_type: 1

==========================================
3. COVER_LETTERS 컬렉션 (자기소개서 정보)
==========================================

📋 컬렉션명: cover_letters
📝 설명: OCR로 추출된 자기소개서 정보를 저장

🔑 주요 필드:
├── _id: ObjectId (기본 키)
├── applicant_id: String (지원자 ID - applicants 참조)
├── extracted_text: String (OCR로 추출된 텍스트)
├── summary: String (AI 요약)
├── keywords: Array<String> (키워드 목록)
├── document_type: String (문서 타입: "cover_letter")
├── basic_info: Object (기본 정보)
│   ├── emails: Array<String> (이메일 목록)
│   ├── phones: Array<String> (전화번호 목록)
│   ├── names: Array<String> (이름 목록)
│   └── urls: Array<String> (URL 목록)
├── file_metadata: Object (파일 메타데이터)
│   ├── filename: String (파일명)
│   ├── size: Number (파일 크기)
│   ├── mime: String (MIME 타입)
│   ├── hash: String (파일 해시)
│   ├── created_at: Date (생성일시)
│   └── modified_at: Date (수정일시)

🆕 새로 추가된 필드 (2025-08-20):
├── growthBackground: String (성장 배경)
├── motivation: String (지원 동기)
└── careerHistory: String (경력 사항)

📊 인덱스:
├── applicant_id: 1
├── created_at: -1
└── document_type: 1

==========================================
4. PORTFOLIOS 컬렉션 (포트폴리오 정보)
==========================================

📋 컬렉션명: portfolios
📝 설명: OCR로 추출된 포트폴리오 정보를 저장

🔑 주요 필드:
├── _id: ObjectId (기본 키)
├── applicant_id: String (지원자 ID - applicants 참조)
├── extracted_text: String (OCR로 추출된 텍스트)
├── summary: String (AI 요약)
├── keywords: Array<String> (키워드 목록)
├── document_type: String (문서 타입: "portfolio")
├── basic_info: Object (기본 정보)
│   ├── emails: Array<String> (이메일 목록)
│   ├── phones: Array<String> (전화번호 목록)
│   ├── names: Array<String> (이름 목록)
│   └── urls: Array<String> (URL 목록)
├── file_metadata: Object (파일 메타데이터)
│   ├── filename: String (파일명)
│   ├── size: Number (파일 크기)
│   ├── mime: String (MIME 타입)
│   ├── hash: String (파일 해시)
│   ├── created_at: Date (생성일시)
│   └── modified_at: Date (수정일시)

📁 포트폴리오 전용 필드:
├── items: Array<Object> (포트폴리오 아이템들)
│   ├── item_id: String (아이템 ID)
│   ├── title: String (아이템 제목)
│   ├── type: String (아이템 타입: "project", "doc", "slide", "code", "url", "image", "video")
│   └── artifacts: Array<Object> (아티팩트 목록)
│       ├── kind: String (아티팩트 종류: "file", "url", "repo")
│       ├── file_id: String (파일 ID - GridFS)
│       ├── url: String (URL)
│       ├── filename: String (파일명)
│       ├── mime: String (MIME 타입)
│       ├── size: Number (파일 크기)
│       ├── hash: String (파일 해시)
│       └── preview_image: String (미리보기 이미지 URL)
├── analysis_score: Number (분석 점수: 0-100)
├── status: String (포트폴리오 상태: "active", "inactive")
├── version: Number (버전 번호)
├── created_at: Date (생성일시)
└── updated_at: Date (수정일시)

📊 인덱스:
├── applicant_id: 1, version: -1 (유니크)
├── applicant_id: 1, created_at: -1
└── document_type: 1

==========================================
5. 기타 컬렉션 (향후 확장 예정)
==========================================

📋 향후 추가 예정 컬렉션:
├── documents: OCR 처리된 모든 문서의 메타데이터
├── pages: PDF 문서의 페이지별 텍스트 정보
├── job_postings: 채용공고 정보
└── interviews: 면접 일정 및 정보

📝 현재는 4개 컬렉션만 사용 중:
├── applicants (지원자 정보)
├── resumes (이력서 정보)
├── cover_letters (자기소개서 정보)
└── portfolios (포트폴리오 정보)

==========================================
컬렉션 간 관계도
==========================================

📊 관계 구조:
applicants (1) ←→ (1) resumes
applicants (1) ←→ (1) cover_letters  
applicants (1) ←→ (N) portfolios (버전 관리)

📝 현재 사용 중인 관계:
├── applicants → resumes (1:1)
├── applicants → cover_letters (1:1)
└── applicants → portfolios (1:N, 버전 관리)

📋 참조 방식:
├── 직접 참조: applicant_id, job_posting_id 등
├── ID 참조: resume_id, cover_letter_id, portfolio_id
└── 버전 관리: portfolios 컬렉션의 version 필드

==========================================
스키마 검증 규칙
==========================================

🔒 포트폴리오 스키마 검증:
├── 필수 필드: applicant_id, items, status, created_at
├── items: 최소 1개 이상
├── analysis_score: 0-100 범위
└── version: 1 이상

🔒 인덱스 제약:
├── applicants.email: 유니크
└── portfolios: applicant_id + version 유니크

==========================================
데이터 타입 정리
==========================================

📊 기본 타입:
├── String: 문자열
├── Number: 숫자 (정수/실수)
├── Boolean: 불린
├── Date: 날짜/시간
├── ObjectId: MongoDB 객체 ID
├── Array: 배열
└── Object: 객체

📊 특수 타입:
├── Enum: 열거형 (예: PortfolioItemType)
├── Optional: 선택적 필드
└── Required: 필수 필드

==========================================
최근 업데이트 사항
==========================================

🆕 2025-08-20 업데이트:
├── cover_letters 컬렉션에 3개 필드 추가
│   ├── growthBackground: 성장 배경
│   ├── motivation: 지원 동기
│   └── careerHistory: 경력 사항
├── portfolios 컬렉션 버전 관리 개선
├── application_id 필드 제거 (스키마 단순화)
└── 파일 크기 제한 50MB로 증가

🔄 스키마 변경:
├── portfolios.application_id: 필수 → 선택사항
├── portfolios.analysis_score: 기본값 0.0 설정
└── 인덱스 최적화 및 중복 키 에러 해결

==========================================
주의사항
==========================================

⚠️ 중요 사항:
├── applicant_id는 모든 문서 컬렉션에서 필수
├── portfolios는 버전 관리로 중복 방지
├── file_hash는 문서 중복 업로드 방지
├── 이메일은 지원자 식별의 주요 키
└── 스키마 검증으로 데이터 무결성 보장

📝 개발 시 고려사항:
├── 버전 관리: portfolios 컬렉션
├── 참조 무결성: ID 기반 연결
├── 인덱스 최적화: 쿼리 성능 향상
├── 스키마 검증: 데이터 품질 보장
└── 확장성: 새로운 필드 추가 용이

==========================================
